# Test Cases for BaseGeometry class

>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

# Test Case 1: Create an instance of BaseGeometry
>>> bg = BaseGeometry()



# Test Case 2: Call the area method (raises an Exception)
>>> bg.area()
Traceback (most recent call last):
...
Exception: area() is not implemented


# Test Case 3: Value is not an integer (raises a TypeError)
>>> bg.integer_validator("age", "23")
Traceback (most recent call last):
...
TypeError: age must be an integer


# Test Case 4: Value is equal to 0 (raises a ValueError)
>>> bg.integer_validator("age", 0)
Traceback (most recent call last):
...
ValueError: age must be greater than 0


# Test Case 5: Value is less than 0 (raises a ValueError)
>>> bg.integer_validator("age", -34)
Traceback (most recent call last):
...
ValueError: age must be greater than 0


# Test Case 6: integer_validator method receives only one argument
>>> bg.integer_validator("name")
Traceback (most recent call last):
...
TypeError: integer_validator() missing 1 required positional argument: 'value'


# Test Case 7: integer_validator method don't receives arguments
>>> bg.integer_validator()
Traceback (most recent call last):
...
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'
